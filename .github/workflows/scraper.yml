name: Build M3U8 Playlist

permissions:
  contents: write

on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # Speed/coverage
      FAST: "1"
      MAX_CHANNELS: "9999"        # process all channels
      CONCURRENCY: "16"           # bump parallelism
      FOLDERS: "stream,player"    # folders to try per channel
      IFRAME_HOPS: "1"            # follow up to 1 iframe
      DLHD_INSECURE: "1"          # tolerate dlhd.dad TLS chain quirks
      REQ_TIMEOUT: "10"
      RETRIES: "1"

      # HLS policy: STRICT allow-list + validation
      VALIDATE_M3U8: "1"
      M3U8_ALLOWLIST: ""          # leave blank => DO NOT write any HLS; write player links instead
      # Example to allow specific hosts (only if you KNOW they work):
      # M3U8_ALLOWLIST: "mizhls.ru,edge.mytrustedcdn.com"

      # Optionally limit by names (comma-separated, fuzzy)
      # CHANNELS: "ABC USA,NBC,ESPN,FS1"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 certifi

      - name: Ensure CA bundle
        run: |
          python - << 'PY'
          import certifi, os
          with open(os.environ['GITHUB_ENV'], 'a') as f:
              f.write(f"SSL_CERT_FILE={certifi.where()}\n")
          print("Using CA bundle:", certifi.where())
          PY

      - name: Locate scraper
        shell: bash
        run: |
          if [ -f "$GITHUB_WORKSPACE/scraper.py" ]; then
            echo "folder=." >> "$GITHUB_ENV"
          elif [ -f "$GITHUB_WORKSPACE/daddylive/scraper.py" ]; then
            echo "folder=daddylive" >> "$GITHUB_ENV"
          else
            echo "scraper.py not found!"
            exit 1
          fi

      - name: Run scraper
        run: |
          echo "Running scraper from: ${{ env.folder }}"
          python "${{ env.folder }}/scraper.py"

      - name: Validate outputs
        run: |
          if [ ! -s out.m3u8 ]; then
            echo "out.m3u8 is missing or empty."
            exit 1
          fi
          echo "Preview:"
          head -n 50 out.m3u8 || true

      - name: Commit and push updated playlist
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          git config --global safe.directory "$GITHUB_WORKSPACE"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add out.m3u8 || true
          git commit -m "Update M3U8 playlist" || echo "No changes to commit"
          git pull --rebase origin "$BRANCH_NAME" || true
          git push
